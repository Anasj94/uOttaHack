{"ast":null,"code":"var _jsxFileName = \"/Users/anasjavaid/Desktop/uOttawa Hackathon/uOttaHack/Front-end/src/components/NewsTicker.js\";\nimport React, { Component } from 'react';\nimport './NewsTicker.css'; // You'll need to create this CSS file for styling\nimport Messaging from './Messaging'; // Import your Messaging module\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NewsTicker extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latestNews: '' // Initialize with an empty string for the latest news\n    };\n    this.handleMessage = message => {\n      // Handle incoming message from MQTT\n      const newValue = message.payloadString;\n      // Update latest news only if it's different from the current latest news\n      if (newValue !== this.state.latestNews) {\n        this.setState({\n          latestNews: newValue\n        });\n      }\n    };\n    this.updateNewsItems = newValue => {\n      // Update news items received from MQTT message\n      this.setState(prevState => ({\n        newsItems: [...prevState.newsItems, newValue] // Append the new value to existing news items\n      }));\n    };\n  }\n  componentDidMount() {\n    // Register the component as a callback with the Messaging module\n    Messaging.register(this.handleMessage);\n  }\n  componentWillUnmount() {\n    // Stop the ticker when the component is unmounted\n    Messaging.unregister(this.handleMessage);\n  }\n  render() {\n    const {\n      newsItems,\n      currentIndex\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-ticker-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-ticker\",\n        children: newsItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === currentIndex ? 'news-item active' : 'news-item',\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default NewsTicker;","map":{"version":3,"names":["React","Component","Messaging","jsxDEV","_jsxDEV","NewsTicker","constructor","args","state","latestNews","handleMessage","message","newValue","payloadString","setState","updateNewsItems","prevState","newsItems","componentDidMount","register","componentWillUnmount","unregister","render","currentIndex","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/anasjavaid/Desktop/uOttawa Hackathon/uOttaHack/Front-end/src/components/NewsTicker.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './NewsTicker.css'; // You'll need to create this CSS file for styling\nimport Messaging from './Messaging'; // Import your Messaging module\n\nclass NewsTicker extends Component {\n  state = {\n    latestNews: '', // Initialize with an empty string for the latest news\n  };\n\n  componentDidMount() {\n    // Register the component as a callback with the Messaging module\n    Messaging.register(this.handleMessage);\n  }\n\n  componentWillUnmount() {\n    // Stop the ticker when the component is unmounted\n    Messaging.unregister(this.handleMessage);\n  }\n\n\n  handleMessage = (message) => {\n    // Handle incoming message from MQTT\n    const newValue = message.payloadString;\n    // Update latest news only if it's different from the current latest news\n    if (newValue !== this.state.latestNews) {\n      this.setState({ latestNews: newValue });\n    }\n  };\n\nupdateNewsItems = (newValue) => {\n  // Update news items received from MQTT message\n  this.setState((prevState) => ({\n    newsItems: [...prevState.newsItems, newValue], // Append the new value to existing news items\n  }));\n};\n\n  render() {\n    const { newsItems, currentIndex } = this.state;\n\n    return (\n      <div className=\"news-ticker-container\">\n        <div className=\"news-ticker\">\n          {newsItems.map((item, index) => (\n            <div\n              key={index}\n              className={\n                index === currentIndex ? 'news-item active' : 'news-item'\n              }\n            >\n              {item}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NewsTicker;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,kBAAkB,CAAC,CAAC;AAC3B,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MACNC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;IAAA,KAaDC,aAAa,GAAIC,OAAO,IAAK;MAC3B;MACA,MAAMC,QAAQ,GAAGD,OAAO,CAACE,aAAa;MACtC;MACA,IAAID,QAAQ,KAAK,IAAI,CAACJ,KAAK,CAACC,UAAU,EAAE;QACtC,IAAI,CAACK,QAAQ,CAAC;UAAEL,UAAU,EAAEG;QAAS,CAAC,CAAC;MACzC;IACF,CAAC;IAAA,KAEHG,eAAe,GAAIH,QAAQ,IAAK;MAC9B;MACA,IAAI,CAACE,QAAQ,CAAEE,SAAS,KAAM;QAC5BC,SAAS,EAAE,CAAC,GAAGD,SAAS,CAACC,SAAS,EAAEL,QAAQ,CAAC,CAAE;MACjD,CAAC,CAAC,CAAC;IACL,CAAC;EAAA;EAzBCM,iBAAiBA,CAAA,EAAG;IAClB;IACAhB,SAAS,CAACiB,QAAQ,CAAC,IAAI,CAACT,aAAa,CAAC;EACxC;EAEAU,oBAAoBA,CAAA,EAAG;IACrB;IACAlB,SAAS,CAACmB,UAAU,CAAC,IAAI,CAACX,aAAa,CAAC;EAC1C;EAmBAY,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEL,SAAS;MAAEM;IAAa,CAAC,GAAG,IAAI,CAACf,KAAK;IAE9C,oBACEJ,OAAA;MAAKoB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCrB,OAAA;QAAKoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBR,SAAS,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBxB,OAAA;UAEEoB,SAAS,EACPI,KAAK,KAAKL,YAAY,GAAG,kBAAkB,GAAG,WAC/C;UAAAE,QAAA,EAEAE;QAAI,GALAC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAe3B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}