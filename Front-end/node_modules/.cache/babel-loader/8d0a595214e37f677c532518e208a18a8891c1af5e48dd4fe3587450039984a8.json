{"ast":null,"code":"var _jsxFileName = \"/Users/nadeem/Desktop/uOttaHack/Front-end/src/components/F2F.js\";\nimport React, { Component } from 'react';\nimport \"./F2F.css\";\nimport Messaging from './Messaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass F2F extends Component {\n  constructor(...args) {\n    super(...args);\n    this.publishDotPosition = () => {\n      const dotElement = document.getElementById('dot');\n      if (!dotElement) return; // Exit if dotElement is not found\n\n      const position = {\n        x: dotElement.offsetLeft + dotElement.offsetWidth / 2,\n        // Center of the dot\n        y: dotElement.offsetTop + dotElement.offsetHeight / 2,\n        // Center of the dot\n        car_no: \"CAR-03\"\n      };\n      const payload = JSON.stringify(position);\n      // Publish dot position to a topic named 'cars'\n      Messaging.publish('cars', payload);\n    };\n  }\n  componentDidMount() {\n    Messaging.connectWithPromise().then(() => {\n      console.log('Connected to Solace Cloud');\n    }).catch(error => {\n      console.error('Failed to connect to Solace Cloud', error);\n    });\n\n    // Start the animation for the first dot immediately\n    this.startAnimation('dot', 100); // Adjust the speed as necessary\n\n    // If initialPosition is already available, start the second dot's animation immediately\n    if (this.props.initialPosition) {\n      setTimeout(() => this.startAnimation('dot2', 100), 0); // Adjust the speed as necessary\n    }\n\n    // Setup to publish dot position periodically\n    this.publishDotPositionInterval = setInterval(this.publishDotPosition, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.publishDotPositionInterval);\n  }\n  startAnimation(dotId, carSpeedKmPerHour) {\n    const dotElement = document.getElementById(dotId);\n    if (!dotElement) return; // Exit if dotElement is not found\n\n    const containerWidth = document.querySelector('.container').clientWidth;\n\n    // Calculate the duration for the animation based on speed\n    const distanceToTravel = containerWidth; // Use full container width\n    const timeTakenInMillis = distanceToTravel / 1000 / (carSpeedKmPerHour / 3600) * 1000;\n\n    // Apply animation styles\n    dotElement.style.animation = `moveDot ${timeTakenInMillis}ms linear forwards`;\n  }\n  renderSecondDot() {\n    const {\n      initialPosition\n    } = this.props;\n    if (!initialPosition) return null;\n\n    // Inline style for the second dot's initial position\n    const style = {\n      left: `${initialPosition.x}px`\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\",\n      id: \"dot2\",\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\",\n        id: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), this.renderSecondDot()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default F2F;","map":{"version":3,"names":["React","Component","Messaging","jsxDEV","_jsxDEV","F2F","constructor","args","publishDotPosition","dotElement","document","getElementById","position","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","car_no","payload","JSON","stringify","publish","componentDidMount","connectWithPromise","then","console","log","catch","error","startAnimation","props","initialPosition","setTimeout","publishDotPositionInterval","setInterval","componentWillUnmount","clearInterval","dotId","carSpeedKmPerHour","containerWidth","querySelector","clientWidth","distanceToTravel","timeTakenInMillis","style","animation","renderSecondDot","left","className","id","fileName","_jsxFileName","lineNumber","columnNumber","render","children"],"sources":["/Users/nadeem/Desktop/uOttaHack/Front-end/src/components/F2F.js"],"sourcesContent":["import React, { Component } from 'react';\nimport \"./F2F.css\";\nimport Messaging from './Messaging';\n\nclass F2F extends Component {\n  componentDidMount() {\n    Messaging.connectWithPromise()\n      .then(() => {\n        console.log('Connected to Solace Cloud');\n      })\n      .catch((error) => {\n        console.error('Failed to connect to Solace Cloud', error);\n      });\n\n    // Start the animation for the first dot immediately\n    this.startAnimation('dot', 100); // Adjust the speed as necessary\n\n    // If initialPosition is already available, start the second dot's animation immediately\n    if (this.props.initialPosition) {\n      setTimeout(() => this.startAnimation('dot2', 100), 0); // Adjust the speed as necessary\n    }\n\n    // Setup to publish dot position periodically\n    this.publishDotPositionInterval = setInterval(this.publishDotPosition, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.publishDotPositionInterval);\n  }\n\n  startAnimation(dotId, carSpeedKmPerHour) {\n    const dotElement = document.getElementById(dotId);\n    if (!dotElement) return; // Exit if dotElement is not found\n\n    const containerWidth = document.querySelector('.container').clientWidth;\n\n    // Calculate the duration for the animation based on speed\n    const distanceToTravel = containerWidth; // Use full container width\n    const timeTakenInMillis =\n      (distanceToTravel / 1000 / (carSpeedKmPerHour / 3600)) * 1000;\n\n    // Apply animation styles\n    dotElement.style.animation = `moveDot ${timeTakenInMillis}ms linear forwards`;\n  }\n\n  publishDotPosition = () => {\n    const dotElement = document.getElementById('dot');\n    if (!dotElement) return; // Exit if dotElement is not found\n\n    const position = {\n      x: dotElement.offsetLeft + dotElement.offsetWidth / 2, // Center of the dot\n      y: dotElement.offsetTop + dotElement.offsetHeight / 2,  // Center of the dot\n      car_no: \"CAR-03\"\n    };\n\n    const payload = JSON.stringify(position);\n    // Publish dot position to a topic named 'cars'\n    Messaging.publish('cars', payload);\n  };\n\n  renderSecondDot() {\n    const { initialPosition } = this.props;\n    if (!initialPosition) return null;\n\n    // Inline style for the second dot's initial position\n    const style = {\n      left: `${initialPosition.x}px`,\n    };\n\n    return <div className=\"dot\" id=\"dot2\" style={style}></div>;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"line\"></div>\n        <div className=\"dot\" id=\"dot\"></div>\n        {this.renderSecondDot()}\n      </div>\n    );\n  }\n}\n\nexport default F2F;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}