{"ast":null,"code":"var _jsxFileName = \"/Users/nadeem/Desktop/uOttaHack/Front-end/src/components/F2F.js\";\nimport React, { Component } from 'react';\nimport \"./F2F.css\";\nimport Messaging from './Messaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass F2F extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notified: false // Flag to track whether notification has been triggered\n    };\n    this.publishDotPosition = () => {\n      // Get dot position\n      const dotElement = document.getElementById('dot');\n      const position = {\n        x: dotElement.offsetLeft,\n        y: dotElement.offsetTop,\n        car_no: \"CAR-03\"\n      };\n      const payload = JSON.stringify(position);\n      // Publish dot position to a topic named 'car'\n      Messaging.publish('cars', payload);\n\n      // Pass position to parent component\n    };\n  }\n  componentDidMount() {\n    Messaging.connectWithPromise().then(() => {\n      console.log('Connected to Solace Cloud');\n    }).catch(error => {\n      console.error('Failed to connect to Solace Cloud', error);\n    });\n\n    // Adjust animation duration based on car speed\n    this.adjustDotSpeed(100); // Adjust car speed as needed in km/hr\n\n    // Publish dot position every 1 second\n    this.publishDotPositionInterval = setInterval(this.publishDotPosition, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.publishDotPositionInterval);\n  }\n  adjustDotSpeed(carSpeedKmPerHour) {\n    const {\n      initialPosition\n    } = props;\n    console.log(initialPosition);\n    const dotElement = document.getElementById('dot');\n    const containerWidth = document.querySelector('.container').clientWidth;\n    const dotWidth = dotElement.offsetWidth;\n    const distanceToTravel = containerWidth - dotWidth; // Distance to travel\n\n    // Calculate time taken to travel the distance at given speed (in milliseconds)\n    const timeTakenInMillis = distanceToTravel / 1000 / (carSpeedKmPerHour / 3600) * 1000;\n\n    // Update animation duration\n    dotElement.style.animationDuration = timeTakenInMillis + 'ms';\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\",\n        id: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default F2F;","map":{"version":3,"names":["React","Component","Messaging","jsxDEV","_jsxDEV","F2F","constructor","args","state","notified","publishDotPosition","dotElement","document","getElementById","position","x","offsetLeft","y","offsetTop","car_no","payload","JSON","stringify","publish","componentDidMount","connectWithPromise","then","console","log","catch","error","adjustDotSpeed","publishDotPositionInterval","setInterval","componentWillUnmount","clearInterval","carSpeedKmPerHour","initialPosition","props","containerWidth","querySelector","clientWidth","dotWidth","offsetWidth","distanceToTravel","timeTakenInMillis","style","animationDuration","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id"],"sources":["/Users/nadeem/Desktop/uOttaHack/Front-end/src/components/F2F.js"],"sourcesContent":["import React, { Component } from 'react';\nimport \"./F2F.css\";\nimport Messaging from './Messaging';\n\nclass F2F extends Component {\n  state = {\n    notified: false // Flag to track whether notification has been triggered\n  };\n\n  componentDidMount() {\n    Messaging.connectWithPromise()\n      .then(() => {\n        console.log('Connected to Solace Cloud');\n      })\n      .catch((error) => {\n        console.error('Failed to connect to Solace Cloud', error);\n      });\n\n    // Adjust animation duration based on car speed\n    this.adjustDotSpeed(100); // Adjust car speed as needed in km/hr\n\n\n    // Publish dot position every 1 second\n    this.publishDotPositionInterval = setInterval(this.publishDotPosition, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.publishDotPositionInterval);\n  }\n\n  adjustDotSpeed(carSpeedKmPerHour) {\n    const {initialPosition}=props;\n    console.log(initialPosition)\n    const dotElement = document.getElementById('dot');\n    const containerWidth = document.querySelector('.container').clientWidth;\n    const dotWidth = dotElement.offsetWidth;\n    const distanceToTravel = containerWidth - dotWidth; // Distance to travel\n\n    // Calculate time taken to travel the distance at given speed (in milliseconds)\n    const timeTakenInMillis =\n      (distanceToTravel / 1000 / (carSpeedKmPerHour / 3600)) * 1000;\n\n    // Update animation duration\n    dotElement.style.animationDuration = timeTakenInMillis + 'ms';\n  }\n\n  publishDotPosition = () => {\n    // Get dot position\n    const dotElement = document.getElementById('dot');\n    const position = {\n      x: dotElement.offsetLeft,\n      y: dotElement.offsetTop,\n      car_no:\"CAR-03\"\n    };\n\n    const payload = JSON.stringify(position)\n    // Publish dot position to a topic named 'car'\n    Messaging.publish('cars', payload);\n\n    // Pass position to parent component\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"line\"></div>\n        <div className=\"dot\" id=\"dot\" ></div>\n      </div>\n    );\n  }\n}\n\nexport default F2F;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,QAAQ,EAAE,KAAK,CAAC;IAClB,CAAC;IAAA,KAuCDC,kBAAkB,GAAG,MAAM;MACzB;MACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MACjD,MAAMC,QAAQ,GAAG;QACfC,CAAC,EAAEJ,UAAU,CAACK,UAAU;QACxBC,CAAC,EAAEN,UAAU,CAACO,SAAS;QACvBC,MAAM,EAAC;MACT,CAAC;MAED,MAAMC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC;MACxC;MACAZ,SAAS,CAACqB,OAAO,CAAC,MAAM,EAAEH,OAAO,CAAC;;MAElC;IACF,CAAC;EAAA;EAnDDI,iBAAiBA,CAAA,EAAG;IAClBtB,SAAS,CAACuB,kBAAkB,CAAC,CAAC,CAC3BC,IAAI,CAAC,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;;IAEJ;IACA,IAAI,CAACC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;;IAG1B;IACA,IAAI,CAACC,0BAA0B,GAAGC,WAAW,CAAC,IAAI,CAACvB,kBAAkB,EAAE,IAAI,CAAC;EAC9E;EAEAwB,oBAAoBA,CAAA,EAAG;IACrBC,aAAa,CAAC,IAAI,CAACH,0BAA0B,CAAC;EAChD;EAEAD,cAAcA,CAACK,iBAAiB,EAAE;IAChC,MAAM;MAACC;IAAe,CAAC,GAACC,KAAK;IAC7BX,OAAO,CAACC,GAAG,CAACS,eAAe,CAAC;IAC5B,MAAM1B,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IACjD,MAAM0B,cAAc,GAAG3B,QAAQ,CAAC4B,aAAa,CAAC,YAAY,CAAC,CAACC,WAAW;IACvE,MAAMC,QAAQ,GAAG/B,UAAU,CAACgC,WAAW;IACvC,MAAMC,gBAAgB,GAAGL,cAAc,GAAGG,QAAQ,CAAC,CAAC;;IAEpD;IACA,MAAMG,iBAAiB,GACpBD,gBAAgB,GAAG,IAAI,IAAIR,iBAAiB,GAAG,IAAI,CAAC,GAAI,IAAI;;IAE/D;IACAzB,UAAU,CAACmC,KAAK,CAACC,iBAAiB,GAAGF,iBAAiB,GAAG,IAAI;EAC/D;EAkBAG,MAAMA,CAAA,EAAG;IACP,oBACE5C,OAAA;MAAK6C,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9C,OAAA;QAAK6C,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5BlD,OAAA;QAAK6C,SAAS,EAAC,KAAK;QAACM,EAAE,EAAC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV;AACF;AAEA,eAAejD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}