{"ast":null,"code":"import options from \"./messaging-options\";\nimport Paho from \"paho-mqtt\";\nclass Messaging extends Paho.Client {\n  constructor() {\n    super(options.invocationContext.host, Number(options.invocationContext.port), options.invocationContext.clientId);\n    this.onMessageArrived = this.handleMessage.bind(this);\n    this.callbacks = [];\n  }\n  connectWithPromise() {\n    return new Promise((resolve, reject) => {\n      options.onSuccess = () => {\n        // Subscribe to the 'admin_news' topic upon successful connection\n        this.subscribe('news/CAR-01');\n        resolve();\n      };\n      options.onFailure = reject;\n      this.connect(options);\n    });\n  }\n\n  // called when the client loses its connection\n  onConnectionLost(responseObject) {\n    if (responseObject.errorCode !== 0) {\n      console.log(\"Connection lost with Solace Cloud\");\n    }\n    // Add auto connect logic with backoff here if you want to automatically reconnect\n  }\n  register(callback) {\n    this.callbacks.push(callback);\n  }\n  unregister(callback) {\n    this.callbacks = this.callbacks.filter(cb => cb !== callback);\n  }\n\n  // called when a message arrives\n  handleMessage(message) {\n    console.log(\"Received message\", message.payloadString);\n    this.callbacks.forEach(callback => callback(message));\n  }\n}\nconst messaging = new Messaging();\nexport default messaging;","map":{"version":3,"names":["options","Paho","Messaging","Client","constructor","invocationContext","host","Number","port","clientId","onMessageArrived","handleMessage","bind","callbacks","connectWithPromise","Promise","resolve","reject","onSuccess","subscribe","onFailure","connect","onConnectionLost","responseObject","errorCode","console","log","register","callback","push","unregister","filter","cb","message","payloadString","forEach","messaging"],"sources":["/Users/nadeem/Desktop/uOttaHack/Front-end/src/components/Messaging.js"],"sourcesContent":["import options from \"./messaging-options\";\nimport Paho from \"paho-mqtt\";\n\nclass Messaging extends Paho.Client {\n  constructor() {\n    super(\n      options.invocationContext.host,\n      Number(options.invocationContext.port),\n      options.invocationContext.clientId\n    );\n    this.onMessageArrived = this.handleMessage.bind(this);\n    this.callbacks = [];\n  }\n\n  connectWithPromise() {\n    return new Promise((resolve, reject) => {\n      options.onSuccess = () => {\n        // Subscribe to the 'admin_news' topic upon successful connection\n        this.subscribe('news/CAR-01');\n        resolve();\n      };\n      options.onFailure = reject;\n      this.connect(options);\n    });\n  }\n\n  // called when the client loses its connection\n  onConnectionLost(responseObject) {\n    if (responseObject.errorCode !== 0) {\n      console.log(\"Connection lost with Solace Cloud\");\n    }\n    // Add auto connect logic with backoff here if you want to automatically reconnect\n  }\n\n  register(callback) {\n    this.callbacks.push(callback);\n  }\n\n  unregister(callback) {\n    this.callbacks = this.callbacks.filter(cb => cb !== callback);\n  }\n\n  // called when a message arrives\n  handleMessage(message) {\n    console.log(\"Received message\", message.payloadString);\n    this.callbacks.forEach((callback) => callback(message));\n  }\n}\n\nconst messaging = new Messaging();\nexport default messaging;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,qBAAqB;AACzC,OAAOC,IAAI,MAAM,WAAW;AAE5B,MAAMC,SAAS,SAASD,IAAI,CAACE,MAAM,CAAC;EAClCC,WAAWA,CAAA,EAAG;IACZ,KAAK,CACHJ,OAAO,CAACK,iBAAiB,CAACC,IAAI,EAC9BC,MAAM,CAACP,OAAO,CAACK,iBAAiB,CAACG,IAAI,CAAC,EACtCR,OAAO,CAACK,iBAAiB,CAACI,QAC5B,CAAC;IACD,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC;IACrD,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCjB,OAAO,CAACkB,SAAS,GAAG,MAAM;QACxB;QACA,IAAI,CAACC,SAAS,CAAC,aAAa,CAAC;QAC7BH,OAAO,CAAC,CAAC;MACX,CAAC;MACDhB,OAAO,CAACoB,SAAS,GAAGH,MAAM;MAC1B,IAAI,CAACI,OAAO,CAACrB,OAAO,CAAC;IACvB,CAAC,CAAC;EACJ;;EAEA;EACAsB,gBAAgBA,CAACC,cAAc,EAAE;IAC/B,IAAIA,cAAc,CAACC,SAAS,KAAK,CAAC,EAAE;MAClCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD;IACA;EACF;EAEAC,QAAQA,CAACC,QAAQ,EAAE;IACjB,IAAI,CAACf,SAAS,CAACgB,IAAI,CAACD,QAAQ,CAAC;EAC/B;EAEAE,UAAUA,CAACF,QAAQ,EAAE;IACnB,IAAI,CAACf,SAAS,GAAG,IAAI,CAACA,SAAS,CAACkB,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKJ,QAAQ,CAAC;EAC/D;;EAEA;EACAjB,aAAaA,CAACsB,OAAO,EAAE;IACrBR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,OAAO,CAACC,aAAa,CAAC;IACtD,IAAI,CAACrB,SAAS,CAACsB,OAAO,CAAEP,QAAQ,IAAKA,QAAQ,CAACK,OAAO,CAAC,CAAC;EACzD;AACF;AAEA,MAAMG,SAAS,GAAG,IAAIlC,SAAS,CAAC,CAAC;AACjC,eAAekC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}